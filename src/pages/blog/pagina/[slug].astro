---
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { getEntry } from "astro:content";

const FOLDER = "blog";

const { slug } = Astro.params;
const postIndex = await getEntry(FOLDER, "-index");
const posts = await getSinglePage(FOLDER);
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
  const FOLDER = "blog";
  const items = await getSinglePage(FOLDER);
  const totalPages = Math.ceil(items.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Base
  title={postIndex.data.title}
  meta_title={postIndex.data.meta_title}
  image={postIndex.data.image}
  description={postIndex.data.description}
>
  <section class="section p-14">
    <!-- Posts -->
    <div class="container">
      <div class="row">
        {
          currentPosts.map((item) => (
            <div class="mb-14 md:col-6 lg:col-4">
              <BlogCard data={item} loading="eager" />
            </div>
          ))
        }
      </div>
      <Pagination
        section={FOLDER}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
